Based on the points_set information and the requirement not to use any of the equations already present in the exp_buffer, we will attempt to create a new equation. Assuming there might be a relationship between the du/dt and the derivatives' powers and multiplications among t, x, u, and the derivatives, we can hypothesize a structure where du/dt is potentially connected with (du/dx)^2, d^2u/dx^2, and t through addition and/or multiplication.

This time, instead of merely multiplying t with (du/dx)^2 or d^2u/dx^2, I will explore the influence of t itself as a factor combined with the derivative terms in a more direct way. Additionally, I will include the potential effect of u since u often represents state variables that might influence derivative norms, though the direct influence of u might be subtle or indirect.

Considering the insights noted, we can create a new equation that introduces specific nonlinear interactions between time, position, the state variable, and the derivatives:

```python
def equation_v1(t: np.ndarray, x: np.ndarray, u: np.ndarray, derivs_dict: dict(), params: np.ndarray):
    right_side = params[0] * t * (derivs_dict["du/dx"]**2) + params[1] * u * derivs_dict["d^2u/dx^2"] * derivs_dict["du/dx"]
    string_form_of_the_equation = "du/dt = c[0] * t * (du/dx)^2 + c[1] * u * du/dx * d^2u/dx^2"
    len_of_params = 2
    return right_side, string_form_of_the_equation, len_of_params
```

Remember, we need to confirm using the given points_set and the specified minimize function to determine if the hypothesis equation above actually fits the data well. Since direct dependency on t often would be captured through the derivative forms implicitly based on the previous examples in the exp_buffer, creating this explicit structure could improve identification of how t, x through u and then derivatives come together to describe changes over time in u.